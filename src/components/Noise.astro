---
interface Props {
  class?: string;
}

const { class: className = "" } = Astro.props;
---

<div class:list={["noise", className]} aria-hidden="true"></div>

<style>
  .noise {
    position: absolute;
    z-index: 1;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    opacity: 0.045;
    overflow: hidden;
  }

  .noise::before {
    content: "";
    position: absolute;
    top: -10px;
    left: -10px;
    width: calc(100% + 20px);
    height: calc(100% + 20px);
    background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 300 300' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='1.2' numOctaves='4' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)'/%3E%3C/svg%3E");
    background-size: 800px 800px;
    background-repeat: repeat;
    mix-blend-mode: overlay;
    animation: noise 1s steps(10) infinite;
  }

  @keyframes noise {
    0% {
      transform: translate(0, 0);
    }
    10% {
      transform: translate(-2px, 2px);
    }
    20% {
      transform: translate(-3px, -2px);
    }
    30% {
      transform: translate(2px, -3px);
    }
    40% {
      transform: translate(3px, 2px);
    }
    50% {
      transform: translate(-2px, 3px);
    }
    60% {
      transform: translate(-3px, 2px);
    }
    70% {
      transform: translate(3px, -2px);
    }
    80% {
      transform: translate(-2px, -2px);
    }
    90% {
      transform: translate(2px, 3px);
    }
    100% {
      transform: translate(0, 0);
    }
  }
</style>
